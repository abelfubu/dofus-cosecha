@use "colors" as c;
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$dofus-cosecha-primary: mat.define-palette(mat.$indigo-palette);
$dofus-cosecha-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$dofus-cosecha-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$dofus-cosecha-theme: mat.define-light-theme(
  (
    color: (
      primary: $dofus-cosecha-primary,
      accent: $dofus-cosecha-accent,
      warn: $dofus-cosecha-warn,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($dofus-cosecha-theme);

* {
  font-family: "Open Sans", sans-serif;
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  --webkit-font-smoothing: antialiased;
  --moz-osx-font-smoothing: grayscale;
  scroll-behavior: smooth;
}

body {
  accent-color: map-get($map: c.$primary, $key: 500);
  background-color: map-get($map: c.$dark, $key: 400);
  background-image: url("https://i70mages.unsplash.com/photo-1493217465235-252dd9c0d632?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1950&q=80");
  background-attachment: fixed;
  color: #ffffffaa;

  ::-moz-selection {
    /* Code for Firefox */
    color: map-get(c.$dark, 500);
    background: map-get(c.$primary, 500);
  }

  ::selection {
    color: map-get(c.$dark, 500);
    background: map-get(c.$primary, 500);
  }
}

input[type="checkbox"] {
  color-scheme: dark;
  transform: scale(1.1);
}

.background .mat-mdc-dialog-container .mdc-dialog__surface {
  background-color: map-get($map: c.$dark, $key: 400);
}

@keyframes hotToastEnterAnimationNegative {
  0% {
    opacity: 0.5;
    transform: translate3d(0, -80px, 0) scale(0.6);
  }

  100% {
    opacity: 1;
    transform: translate3d(0, 0, 0) scale(1);
  }
}

@keyframes hotToastEnterAnimationPositive {
  0% {
    opacity: 0.5;
    transform: translate3d(0, 80px, 0) scale(0.6);
  }

  100% {
    opacity: 1;
    transform: translate3d(0, 0, 0) scale(1);
  }
}

@keyframes hotToastExitAnimationPositive {
  0% {
    opacity: 1;
    transform: translate3d(0, 0, -1px) scale(1);
  }

  100% {
    opacity: 0;
    transform: translate3d(0, 130px, -1px) scale(0.5);
  }
}

@keyframes hotToastExitAnimationNegative {
  0% {
    opacity: 1;
    transform: translate3d(0, 0, -1px) scale(1);
  }

  100% {
    opacity: 0;
    transform: translate3d(0, -130px, -1px) scale(0.5);
  }
}
